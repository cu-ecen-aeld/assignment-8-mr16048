name: assignment-test
on:
    push:
        tags-ignore:
            - '*'
        branches:
            - '*'
jobs:
    full-test:
        container: cuaesd/aesd-autotest:24-assignment7-buildroot
        runs-on: self-hosted
        timeout-minutes: 120
        steps:
          - uses: actions/checkout@v2
          - name: Checkout submodules
            run: git submodule update --init --recursive
          - uses: webfactory/ssh-agent@v0.5.3
            with:
                ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          - name: Add GitHub SSH host key
            run: |
                 mkdir -p ~/.ssh
                 ssh-keygen -R github.com || true
                 ssh-keyscan github.com >> ~/.ssh/known_hosts
          # - name: Clean previous Buildroot build
          #   working-directory: buildroot
          #   run: make BR2_EXTERNAL=../base_external aesdsocket-dirclean
          - name: Run full test
            env:
              GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
              FORCE_UNSAFE_CONFIGURE: 1
            run: ./full-test.sh
          - name: Debug MPFR/GMP link issue
            working-directory: ${{ github.workspace }}/buildroot
            run: |
              set -eux
              O=output  # adjust if your O= differs
              echo "== show failing config.log =="
              f=$(ls -d "$O"/build/host-mpfr-*/ 2>/dev/null | tail -n1) || true
              if [ -n "${f:-}" ] && [ -f "$f/config.log" ]; then
                tail -n 120 "$f/config.log"
              else
                echo "config.log not found yet (host-mpfr didn't run or already cleaned)."
              fi

              echo "== what libgmp does Buildroot have? =="
              ls -l "$O/host/include/gmp.h" "$O"/host/lib/libgmp.* 2>/dev/null || true
              file "$O"/host/lib/libgmp.so* 2>/dev/null | head || true

              echo "== env that could interfere =="
              type -a gcc || true
              echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH-}"
              echo "LIBRARY_PATH=${LIBRARY_PATH-}"
              echo "PKG_CONFIG_PATH=${PKG_CONFIG_PATH-}"

              echo "== system libgmp candidates (if any) =="
              find /usr -name 'libgmp.so*' 2>/dev/null | sort | head

          - name: Cleanup
            if: always()
            run: |
              ssh-add -D
